server:
    port: 8080

spring:
    application:
        name: compression-worker
    neo4j:
        uri: ${SPRING_NEO4J_URI:bolt://localhost:7687}
        authentication:
            password: ${SPRING_NEO4J_PASSWORD:password}
            username: ${SPRING_NEO4J_USERNAME:neo4j}
    data:
        redis:
            host: ${SPRING_REDIS_HOST:localhost}
            port: ${SPRING_REDIS_PORT:6379}
    kafka:
        bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
        topic:
            file-compression: ${SPRING_KAFKA_TOPIC_FILE_COMPRESSION:file-compression}
            file-compression-group-id: ${SPRING_KAFKA_GROUP_ID:compression-worker}
        consumer:
            auto-offset-reset: earliest
            enable-auto-commit: false
            properties:
                max.poll.interval.ms: 600000 # 10 хвилин для тривалої обробки
            bootstrap-servers:
                - my-kafka-cluster-controller-0.my-kafka-cluster-controller-headless.default.svc.cluster.local:9092
                - my-kafka-cluster-controller-1.my-kafka-cluster-controller-headless.default.svc.cluster.local:9092
                - my-kafka-cluster-controller-2.my-kafka-cluster-controller-headless.default.svc.cluster.local:9092
        listener:
            ack-mode: MANUAL
        retry:
            topic:
                attempts: 3 # Кількість спроб повторної обробки
                backoff:
                    delay: 1000 # Затримка між спробами - 1 секунда
        properties:
            sasl:
                jaas:
                    config: ${SPRING_KAFKA_SASL_JAAS_CONFIG:org.apache.kafka.common.security.scram.ScramLoginModule required username="user1" password="P34gV3uVml";}
                mechanism: ${SPRING_KAFKA_SASL_MECHANISM:PLAIN}
            security:
                protocol: ${SPRING_KAFKA_SECURITY_PROTOCOL:SASL_PLAINTEXT}
    cloud:
        aws:
            s3:
                bucket:
                    staging: ${SPRING_AWS_S3_BUCKET_STAGING:staging-bucket-nest}
                    main: ${SPRING_AWS_S3_BUCKET_MAIN:main-bucket-nest}
                region: ${SPRING_AWS_REGION:eu-central-1}

    endpoints:
        web:
           exposure:
               include: "*" # Expose all endpoints